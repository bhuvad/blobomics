// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fastHessian
DataFrame fastHessian(NumericMatrix emat, NumericVector maskvec, IntegerVector x, IntegerVector y, int octaves, int threshold);
RcppExport SEXP _blobomics_fastHessian(SEXP ematSEXP, SEXP maskvecSEXP, SEXP xSEXP, SEXP ySEXP, SEXP octavesSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type emat(ematSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maskvec(maskvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type octaves(octavesSEXP);
    Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(fastHessian(emat, maskvec, x, y, octaves, threshold));
    return rcpp_result_gen;
END_RCPP
}
// smoothScales
NumericMatrix smoothScales(DataFrame features, NumericVector maskvec, IntegerVector x, IntegerVector y);
RcppExport SEXP _blobomics_smoothScales(SEXP featuresSEXP, SEXP maskvecSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maskvec(maskvecSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(smoothScales(features, maskvec, x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_blobomics_fastHessian", (DL_FUNC) &_blobomics_fastHessian, 6},
    {"_blobomics_smoothScales", (DL_FUNC) &_blobomics_smoothScales, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_blobomics(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
